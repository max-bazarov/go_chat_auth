syntax = "proto3";

package auth_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/max-bazarov/go_chat_auth/pkg/auth_v1;auth_v1"; // where generated files will be contained. There is a package name of these files after ;
// Why pkg? Because protoc generates grpc server and client. We will import client in other microservices if we want to make requests to this service

service UserAPIV1 {
    rpc Create(CreateRequest) returns (CreateResponse);
    rpc Get(GetRequest) returns (GetResponse);
    rpc Update(UpdateRequest) returns (google.protobuf.Empty); // returns empty message
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty);
  }

enum Role {
    user = 0;
    admin = 1;
}

message UserInfo {
    string name = 1;
    string email = 2;
    string password = 3;
    string password_confirm = 4;
    Role role = 5;
}

message UserUpdateInfo {
    google.protobuf.StringValue name = 1; // в Protobuf все поля изначально опциональны. Этот тип данных присвоит null, если ничего не было передано
    google.protobuf.StringValue email = 2;
}

message User {
    int64 id = 1;
    UserInfo info = 2;
    google.protobuf.Timestamp created_at = 3;
    google.protobuf.Timestamp updated_at = 4;
}

message CreateRequest {
    UserInfo user = 1;
}

message CreateResponse {
    int64 id = 1;
}

message GetRequest {
    int64 id = 1;
}

message GetResponse {
    User user = 1;
}

message UpdateRequest {
    int64 id = 1;
    UserUpdateInfo info = 2;
}

message DeleteRequest {
    int64 id = 1;
}